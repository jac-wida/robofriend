{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","rrobots","robots","map","robot","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","e","preventDefault","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAaeA,EAXH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,mBACpB,gCACI,6BAAKC,IACL,4BAAIC,WCYLI,EAjBE,SAAC,GAAa,IACrBC,EADoB,EAAXC,OAEf,OACI,8BAEQD,EAAQE,KAAI,SAAAC,GAAK,OACb,cAAC,EAAD,CACAV,GAAIU,EAAMV,GACVC,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OAHFQ,EAAMV,UCMtBW,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,qCACjBU,KAAK,OACLC,YAAY,gBACZC,SAAUH,OCEPI,EATD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,YC+DAC,G,wDA1DX,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IAsBVO,eAAgB,SAACC,GACfA,EAAEC,iBACE,EAAKC,SAAS,CAACC,YAAaH,EAAEI,OAAOC,SAvBvC,EAAKC,MAAO,CACVvB,OAAO,GACPoB,YAAa,IAJC,E,gEAgBA,IAAD,OAEjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACnB,OAAQ4B,S,+BAQ9B,IAAD,EACsBC,KAAKN,MAA3BvB,EADA,EACAA,OAAOoB,EADP,EACOA,YACRU,EAAiB9B,EAAO+B,QAAO,SAAA7B,GAC7B,OAAOA,EAAMT,KAAKuC,cAAcC,SAASb,EAAYY,kBAG7D,OAAmB,IAAhBhC,EAAOkC,OACD,oBAAIvC,UAAU,KAAd,qBAIL,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAQ8B,a,GA5CZK,IAAMC,YCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a6a4091.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({id,name,email}) =>{\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 grow ma2 bw2 shadow-5 tc'>\r\n            <img alt='robot' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    const rrobots =robots;\r\n    return(\r\n        <div>\r\n            {\r\n                rrobots.map(robot =>(\r\n                    <Card key={robot.id} \r\n                    id={robot.id} \r\n                    name={robot.name} \r\n                    email={robot.email}\r\n                    />)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-light-green ma2'\r\n            type='text'\r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll =(props) =>{\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n        {props.children}\r\n    </div>\r\n    )\r\n    \r\n    }\r\n\r\nexport default Scroll;","import React from 'react';\nimport CardList from './components/CardList';\n// import {robots} from './robots'\nimport SearchBox from './components/SearchBox';\nimport Scroll from './components/Scroll';\n\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state ={\n        robots:[],\n        searchField: ''\n      }\n  }\n\n  // componentDidMount(){\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //   .then(response => response.json())\n  //   .then(users => this.setState({\n  //     robots: users\n  //   }))\n    \n  // }\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())      \n    .then(users => this.setState({robots: users}))\n  }\n\n  onSearchChange =(e) =>{\n    e.preventDefault();\n        this.setState({searchField: e.target.value});\n  }\n\n  render() {\n    const {robots,searchField} = this.state;\n    const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n\n    if(robots.length===0){\n      return <h1 className=\"tc\">LOADING</h1>\n    }\n    else{\n      return (\n        <div className='tc ma3'>\n          <h1 className='f1'>Robo friends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots}/>\n          </Scroll>\n         \n          \n        </div>\n      );\n\n    }\n\n    \n\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}